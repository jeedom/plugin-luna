#!/bin/bash

finddev() {
	cfgpath=`find  /sys/devices/platform/ -name "ttyUSB*" | grep "2-1\.1\/" | grep "2-1\.1:1\.2" | grep -v "tty\/"`
	dev="$(basename $cfgpath 2>/dev/null)"
	echo $dev
}


_4g_on() {
	echo $FUNCNAME

	dev=$(finddev)
	local yyy=`echo $dev | grep ttyUSB | wc -l`
	if [ "$yyy" = "1" ]; then
		return 0
	fi

	while [ ! "$yyy" == "1" ]; do
		echo 0 > /sys/class/leds/ltepwr/brightness
		echo 0 > /sys/class/leds/lteldo/brightness
		echo 0 > /sys/class/leds/lterst/brightness
		sleep 1
		echo 1 > /sys/class/leds/ltepwr/brightness
		echo 1 > /sys/class/leds/lteldo/brightness
		echo 1 > /sys/class/leds/lterst/brightness


		sleep 15

		dev=$(finddev)
		yyy=`echo $dev | grep ttyUSB | wc -l`
	done

	return 0
}

_4g_off() {
	echo $FUNCNAME

	dev=$(finddev)
	local yyy=`echo $dev | grep ttyUSB | wc -l`
	if [ "$yyy" = "0" ]; then
		return 0
	fi

	while [ ! "$yyy" == "0" ]; do
		echo 0 > /sys/class/leds/ltepwr/brightness
		echo 0 > /sys/class/leds/lteldo/brightness
		echo 0 > /sys/class/leds/lterst/brightness

		sleep 2

		dev=$(finddev)
		yyy=`echo $dev | grep ttyUSB | wc -l`
	done

	return 0
}

_4g_off_on() {
	echo $FUNCNAME

	_4g_off
	local ret=$?
	if [ ! "$ret" = "0" ]; then
		return 1
	fi
	_4g_on
	ret=$?
	if [ ! "$ret" == "0" ]; then
		return 1
	fi
	return 0
}

_4g_check_card() {
	echo $FUNCNAME

	local dev=$1
	local yyy=20

	while [ $yyy -gt 0 ]; do
		pppcmd $dev 'AT+CPIN?'

		local insert=`pppcmd $dev 'AT+CPIN?' | grep 'READY' | wc -l`
		[ "$insert" == "1" ] && {
			logger card detect ok
			return 0
		}

		sleep 3
		yyy=$((yyy-1))
	done

	return 1
}

_4g_check_register() {
	echo $FUNCNAME

	local dev=$1
	local yyy=20

	while [ $yyy -gt 0 ]; do
		pppcmd $dev 'AT+COPS?'
		pppcmd $dev 'AT+CEREG?'
		pppcmd $dev 'AT+CGREG?'
		pppcmd $dev 'AT+CREG?'

		local regm=`pppcmd $dev 'AT+CREG?' | grep 'CREG: 0,1' | wc -l`
		[ "$regm" == "1" ] && {
			logger reg ok
			return 0
		}

		regm=`pppcmd $dev 'AT+CREG?' | grep 'CREG: 0,5' | wc -l`
		[ "$regm" == "1" ] && {
			logger reg ok
			return 0
		}

		regm=`pppcmd $dev 'AT+CEREG?' | grep 'CEREG: 0,1' | wc -l`
		[ "$regm" == "1" ] && {
			logger reg ok
			return 0
		}

		regm=`pppcmd $dev 'AT+CEREG?' | grep 'CEREG: 0,5' | wc -l`
		[ "$regm" == "1" ] && {
			logger reg ok
			return 0
		}

		regm=`pppcmd $dev 'AT+CGREG?' | grep 'CGREG: 0,1' | wc -l`
		[ "$regm" == "1" ] && {
			logger reg ok
			return 0
		}

		regm=`pppcmd $dev 'AT+CGREG?' | grep 'CGREG: 0,5' | wc -l`
		[ "$regm" == "1" ] && {
			logger reg ok
			return 0
		}

		sleep 3
		yyy=$((yyy-1))
	done

	return 1
}

_4g_check() {
	echo $FUNCNAME

	_4g_exsit=`ifconfig | grep ppp0 | wc -l`
	if [ "${_4g_exsit}" == "0" ]; then
		echo 'no ppp0'
		return 1
	fi


	_4g_cnt=$(route -n | awk -v iface="ppp0" '{ if ($8 == iface) print 1}' | wc -l)
	[ "$_4g_cnt" == "0" ] && {
		echo 'no route'
		return 1
	}

	cnt=2
	while [ $cnt -gt 0 ]; do
		ping 8.8.8.8 -c 1 -W 60 -I ppp0  2>1 1>/dev/null
		ret=$?
		if [ "$ret" == "0" ]; then
			return 0
		fi

		ping 114.114.114.114 -c 1 -W 60 -I ppp0  2>1 1>/dev/null
		ret=$?
		if [ "$ret" == "0" ]; then
			return 0
		fi

		cnt=$((cnt-1))
		sleep 1
	done

	echo 'ping failed'
	return 1
}

_4g_eth0_check() {
	echo $FUNCNAME

	cnt=1
	while [ $cnt -gt 0 ]; do
		ping 8.8.8.8 -c 1 -W 5 -I eth0  2>1 1>/dev/null
		ret=$?
		if [ "$ret" == "0" ]; then
			return 0
		fi

		ping 114.114.114.114 -c 1 -W 5 -I eth0  2>1 1>/dev/null
		ret=$?
		if [ "$ret" == "0" ]; then
			return 0
		fi

		cnt=$((cnt-1))
		sleep 1
	done
	return 1
}

_4g_kill() {
	echo $FUNCNAME

	timeout=5

	killall -15 pppd
	sleep 1

	killall -0 pppd
	while [ $? -eq 0 ]; do
		timeout=`expr $timeout - 1`
		if [ $timeout -eq 0 ]; then
			exit 1
		fi
		sleep 1
		killall -0 pppd
	done

	if [ $? -ne 0 ]; then
		killall -9 pppd
	fi
}

_4g_switch_route() {
	echo $FUNCNAME

	gw=$(route -n  | awk '{ if ($8 == "ppp0" && $1 != "0.0.0.0") print $1}')

	ret=$(route -n | awk -v iface=ppp0 '{ if ( $1 == "0.0.0.0" && $8 == iface) print 1}' | wc -l)
	if [ "$ret" == "0" ]; then
		echo route add default gw $gw dev ppp0 metric 
		route add default gw $gw dev ppp0 metric 1
	fi
	cp /etc/ppp/resolv.conf /etc/resolv.conf
}

_4g_delete_route() {
	echo $FUNCNAME

	ret=$(route -n | awk -v iface=ppp0 '{ if ( $1 == "0.0.0.0" && $8 == iface) print 1}' | wc -l)
	if [ "$ret" == "1" ]; then
		echo $FUNCNAME
		echo route del default gw $gw dev $1 
		route del default dev ppp0
	fi
}

_4g_pppd() {
	echo $FUNCNAME
	echo "quectel-pppd options in effect:"

	QL_DEVNAME=$1
	QL_APN=$2
	QL_USER=$3
	QL_PASSWORD=$4
	QL_PINCODE=$5

	if [ $# -ge 1 ]; then
		QL_DEVNAME=$1	
		echo "devname   $QL_DEVNAME    # (from command line)"
	else
		echo "devname   $QL_DEVNAME    # (default)"
	fi
	if [ $# -ge 2 ]; then
		QL_APN=$2	
		echo "apn       $QL_APN    # (from command line)"
	else
		echo "apn       $QL_APN    # (default)"
	fi
	if [ $# -ge 3 ]; then
		QL_USER=$3	
		echo "user      $QL_USER   # (from command line)"
	else
		echo "user      $QL_USER   # (default)"
	fi
	if [ $# -ge 4 ]; then
		QL_PASSWORD=$4	
		echo "password  $QL_PASSWORD   # (from command line)"
	else
		echo "password  $QL_PASSWORD   # (default)"
	fi

	CONNECT="'chat -s -v ABORT BUSY ABORT \"NO CARRIER\" ABORT \"NO DIALTONE\" ABORT ERROR ABORT \"NO ANSWER\" TIMEOUT 30 \
	\"\" AT OK ATE0 OK ATI\;+CSUB\;+CSQ\;+CPIN?\;+COPS?\;+CGREG?\;\&D2 \
	OK AT+CGDCONT=1,\\\"IP\\\",\\\"$QL_APN\\\",,0,0 OK ATD*99# CONNECT'"

	rm -rf /etc/ppp/resolv.conf
	rm -rf /var/run/ppp/resolv.conf

	QL_DEVNAME=$(basename $QL_DEVNAME)
	sed -i "2s/^.*$/\/dev\/$QL_DEVNAME/" /etc/ppp/peers/dial

  sed -i 's/^user.*$/user '$QL_USER'/g' /etc/ppp/peers/dial
  sed -i 's/^password.*$/password '$QL_PASSWORD'/g' /etc/ppp/peers/dial
  sed -i 's/at+cgdcont=1,"IP",".*"/at+cgdcont=1,"IP","'$QL_APN'"/g' /etc/ppp/peers/mo_3gmodule.dial
  sed -i 's/OK at/OK @\/etc\/ppp\/peers\/pin/g' /etc/ppp/peers/mo_3gmodule.dial

	pppd call dial

	local yyy=20
	while [ $yyy -gt 0 ]; do
		echo 'wait pppd ...'
		[ ! -e /etc/ppp/resolv.conf ] && {
			sleep 3
			yyy=$((yyy-1))
			continue
		}

		break;
	done

	if [ $yyy -eq 0 ]; then
		return
	fi
	sleep 3
	
	while [ 1 ]; do
		_4g_check
		local ret=$?
		if [ ! "$ret" == "0" ]; then
			break;
		fi

		_4g_eth0_check
		ret=$?
		if [ ! "$ret" == "0" ]; then
			_4g_switch_route
		else
			_4g_delete_route
		fi
		sleep 3
	done

	_4g_kill
}

run() {
	while [ 1 ]; do
		_4g_off_on
		local ret=$?
		if [ ! "$ret" == "0" ]; then
			continue
		fi
		local dev=$(finddev)
		
		_4g_check_card /dev/$dev
		ret=$?
		if [ ! "$ret" == "0" ]; then
			continue
		fi

		_4g_check_register /dev/$dev
		ret=$?
		if [ ! "$ret" == "0" ]; then
			continue
		fi

		echo "get 4g at device: /dev/$dev"
        apn=$(jq '.lte.apn' /var/www/html/plugins/luna/data/lte.json)
        user=$(jq '.lte.user' /var/www/html/plugins/luna/data/lte.json)
        password=$(jq '.lte.password' /var/www/html/plugins/luna/data/lte.json)
		_4g_pppd /dev/$dev $apn $user $password

		echo "diconnect...."
		sleep 1
	done
}

run